apiVersion: v1
kind: Secret
metadata:
  name: smbcreds 
  namespace: "{{ cmf.environment.name }}"
stringData:
  username: "{{ db_username }}" 
  password: "{{ admin_password }}"

---
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: smb.csi.k8s.io
  name: "{{ cmf_installation_data_pv }}"
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
  csi:
    driver: smb.csi.k8s.io
    volumeHandle: "smb-{{ cmf_db_server_name }}.{{ cmf.environment.name }}.svc.cluster.local/shares/"
    volumeAttributes:
      source: //{{ db_host_path }}/shares/{{ cmf_installation_data_pv }} 
    nodeStageSecretRef:
      name: smbcreds 
      namespace: "{{ cmf.environment.name }}"

# ---
# #alternative, creating storageclass
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: cmf-smb-share-sc 
# provisioner: smb.csi.k8s.io
# parameters:
#   source: "//smb-{{ cmf_db_server_name }}.{{ cmf.environment.name }}.svc.cluster.local/shares/"
#   csi.storage.k8s.io/provisioner-secret-name: smbcreds 
#   csi.storage.k8s.io/provisioner-secret-namespace: "{{ cmf.environment.name }}"
#   csi.storage.k8s.io/node-stage-secret-name: smbcreds 
#   csi.storage.k8s.io/node-stage-secret-namespace: "{{ cmf.environment.name }}"
# reclaimPolicy: Retain
# volumeBindingMode: Immediate
# mountOptions:
#   - dir_mode=0777
#   - file_mode=0777
#   - uid=1001
#   - gid=1001